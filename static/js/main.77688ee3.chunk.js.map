{"version":3,"sources":["components/Layout/Nav/Nav.js","components/Layout/Header/Header.js","components/Aux/Card/Card.js","components/PostItem/PostItem.js","components/Spinner/Spinner.js","containers/Posts/Posts.js","contentfulClient.js","containers/Posts/FullPost/FullPost.js","components/About/About.js","components/Aux/Container/Container.js","containers/Profile/Profile.js","components/Blog/Blog.js","components/App/App.js","serviceWorker.js","index.js","components/Layout/Header/Header.module.css","components/Aux/Card/Card.module.css","components/Spinner/Spinner.module.css"],"names":["nav","props","className","to","exact","header","styles","Header","style","color","card","Card","children","postItem","post","title","id","src","img","alt","spinner","Spinner","contentful","require","Posts","state","posts","loading","client","createClient","space","accessToken","this","getEntries","content_type","then","res","fetchedPosts","items","map","sys","fields","body","content","substring","concat","author","name","createdAt","slides","file","url","setState","catch","error","console","log","length","postsItems","key","Component","contentfulClient","FullPost","formatPostBody","postContent","Text","options","renderNode","BLOCKS","PARAGRAPH","node","renderText","text","split","flatMap","i","documentToReactComponents","postId","match","params","getEntry","entry","fetchedPost","imageUrl","photo","imageDescription","description","linkedIn","Date","toDateString","slide","fileName","maxWidth","margin","image","index","about","textAlign","container","Profile","formatAuthorBio","authorBio","authorId","fetchedAuthor","bio","textDecoration","display","justifyContent","width","blog","path","component","About","App","basename","Blog","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.77688ee3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Nav.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact>\n            COURSE\n          </NavLink>\n        </li>\n        {/* <li>\n          <NavLink to=\"/about\">ABOUT</NavLink>\n        </li> */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default nav;\n","import React from \"react\";\n\nimport Nav from \"../Nav/Nav\";\nimport styles from \"./Header.module.css\";\n\nconst header = (props) => {\n  return (\n    <header>\n      <div className={styles.Header}>\n        <h1>\n          <span style={{ color: \"#43963f\" }}>Brain</span>Bites\n        </h1>\n        <p>\n          Your business trainer on a daily basis.\n        </p>\n      </div>\n      <Nav />\n    </header>\n  );\n};\n\nexport default header;\n","import React from \"react\";\n\nimport styles from \"./Card.module.css\";\n\nconst card = (props) => {\n  return <div className={styles.Card}>{props.children}</div>;\n};\n\nexport default card;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from \"../Aux/Card/Card\";\n\nimport \"./PostItem.css\";\nimport { FaCalendarAlt } from \"react-icons/fa\";\n\nconst postItem = (props) => {\n  return (\n    <li className=\"post-item\">\n      <div className=\"post-item__content\">\n        <Card>\n          {/* <div className=\"post__metadata\">\n            <span className=\"icon\">\n              <FaCalendarAlt />\n            </span>\n            {new Date(props.post.createdAt).toDateString()}\n          </div> */}\n          <h2 className=\"post__title\">{props.post.title}</h2>\n          <Link to={\"/posts/\" + props.post.id}>\n            <img src={props.post.img} alt=\"intro\" className=\"post-item__img\" />\n          </Link>\n          <Link className=\"btn btn--fullwidth\" to={\"/posts/\" + props.post.id}>\n            Read More\n          </Link>\n        </Card>\n      </div>\n\n\n    </li>\n  );\n};\n\nexport default postItem;\n","import React from \"react\";\n\nimport styles from \"./Spinner.module.css\";\n\nconst spinner = (props) => {\n  return <div className={styles.Spinner}>Loading...</div>;\n};\n\nexport default spinner;\n","import React, { Component, Fragment } from \"react\";\n\nimport PostItem from \"../../components/PostItem/PostItem\";\nimport Card from \"../../components/Aux/Card/Card\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport \"./Posts.css\"\n\nconst contentful = require(\"contentful\");\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      loading: true,\n    };\n\n    this.client = contentful.createClient({\n      space: \"5ewpe53pwxis\",\n      accessToken: \"Xerq7AgfY3obWybUXHTuhYnXSNUa5aHgd3l5SQnY-jk\",\n    });\n  }\n\n  componentDidMount() {\n    this.client\n      .getEntries({\n        content_type: \"blogPost\",\n      })\n      .then((res) => {\n        const fetchedPosts = res.items.map((post) => {\n          return {\n            id: post.sys.id,\n            title: post.fields.title,\n            body: post.fields.content.substring(0, 250).concat(\" ...\"),\n            author: post.fields.author.fields.name,\n            createdAt: post.sys.createdAt,\n            img: post.fields.slides[0].fields.file.url\n          };\n        });\n        this.setState({ posts: fetchedPosts, loading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(\"Something wrong happened\", error);\n      });\n  }\n\n  render() {\n    let posts = (\n      <Card>\n        <Spinner />\n      </Card>\n    );\n\n    if (!this.state.loading) {\n      if (this.state.posts.length) {\n        const postsItems = this.state.posts.map((post) => (\n          <PostItem post={post} key={post.id} />\n        ));\n\n        posts = <ul className=\"post-items\">\n          {postsItems}\n        </ul>\n\n      } else {\n        posts = (\n          <Card>\n            <p>No posts available</p>\n          </Card>\n        );\n      }\n    }\n\n    return <Fragment>{posts}</Fragment>;\n  }\n}\n\nexport default Posts;\n","import * as contentful from \"contentful\";\n\nconst contentfulClient =  contentful.createClient({\n    space: \"5ewpe53pwxis\",\n    accessToken: \"Xerq7AgfY3obWybUXHTuhYnXSNUa5aHgd3l5SQnY-jk\",\n});\n\nexport default contentfulClient;","import React, { Component, Fragment } from \"react\";\n\nimport Card from \"../../../components/Aux/Card/Card\";\nimport Spinner from \"../../../components/Spinner/Spinner\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { BLOCKS } from \"@contentful/rich-text-types\";\n\nimport contentfulClient from \"../../../contentfulClient\";\n\nimport \"./FullPost.css\";\n\nclass FullPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      loading: true,\n    };\n\n  }\n\n  componentDidMount() {\n    const postId = this.props.match.params.id;\n\n    contentfulClient\n      .getEntry(postId)\n      .then((entry) => {\n        console.log(entry)\n        const fetchedPost = {\n          title: entry.fields.title,\n          content: entry.fields.content,\n          body: entry.fields.body,\n          author: {\n            id: entry.fields.author.sys.id,\n            name: entry.fields.author.fields.name,\n            imageUrl: entry.fields.author.fields.photo.fields.file.url,\n            imageDescription:\n              entry.fields.author.fields.photo.fields.description,\n            linkedIn: entry.fields.author.fields.linkedIn,\n          },\n          createdAt: new Date(entry.sys.createdAt).toDateString(),\n          slides: entry.fields.slides.map((slide) => {\n            return {\n              url: slide.fields.file.url,\n              description: slide.fields.file.fileName,\n            };\n          }),\n        };\n\n        this.setState({ post: fetchedPost, loading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(\"Something wrong happened\", error);\n      });\n  }\n\n  formatPostBody = (postContent) => {\n    const Text = ({ children }) => <p>{children}</p>;\n\n    const options = {\n      renderNode: {\n        [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n      },\n      renderText: (text) =>\n        text.split(\"\\n\").flatMap((text, i) => [i > 0 && <br />, text]),\n    };\n\n    return documentToReactComponents(postContent, options);\n  };\n\n  render() {\n    let content = <Spinner />;\n\n    if (!this.state.loading) {\n      if (this.state.post) {\n        content = (\n          <Fragment>\n            <h1 className=\"post__title\">{this.state.post.title}</h1>\n            <div style={{ maxWidth: \"500px\", margin: \"0 auto\" }}>\n              <Carousel>\n                {this.state.post.slides.map((image, index) => (\n                  <div key={index}>\n                    <img src={image.url} alt={image.description} />\n                  </div>\n                ))}\n              </Carousel>\n            </div>\n\n            <p className=\"post__body\">\n              {this.formatPostBody(this.state.post.body)}\n            </p>\n\n          </Fragment>\n        );\n      } else {\n        content = <p style={{ color: \"red\" }}>Something went wrong</p>;\n      }\n    }\n\n    return <div className=\"fullpost\">\n      <Card>{content}</Card>\n    </div>;\n  }\n}\n\nexport default FullPost;\n","import React from \"react\";\n\nimport Card from \"../../components/Aux/Card/Card\";\n\nconst about = (props) => {\n  return (\n    <Card>\n      <h1>About Agile Up</h1>\n\n      <div style={{ textAlign: \"left\" }}>\n        <p>Maybe here we can put some information about Agile UP.</p>\n\n        <p>If you think this section is not necessary we can just delete it.</p>\n      </div>\n    </Card>\n  );\n};\n\nexport default about;\n","import React from \"react\";\n\nimport \"./Container.css\";\n\nconst container = (props) => {\n  return <div className=\"container\">{props.children}</div>;\n};\n\nexport default container;\n","import React, { Component } from 'react';\n\nimport Card from \"../../components/Aux/Card/Card\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { BLOCKS } from \"@contentful/rich-text-types\";\n\nimport contentfulClient from \"../../contentfulClient\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { author: null }\n    }\n\n    formatAuthorBio = (authorBio) => {\n        const Text = ({ children }) => <p>{children}</p>;\n\n        const options = {\n            renderNode: {\n                [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n            },\n            renderText: (text) =>\n                text.split(\"\\n\").flatMap((text, i) => [i > 0 && <br />, text]),\n        };\n\n        return documentToReactComponents(authorBio, options);\n    };\n\n    componentDidMount() {\n        const authorId = this.props.match.params.id;\n        contentfulClient\n            .getEntry(authorId)\n            .then((entry) => {\n                const fetchedAuthor = {\n                    id: entry.sys.id,\n                    name: entry.fields.name,\n                    image: {\n                        url: entry.fields.photo.fields.file.url,\n                        description: entry.fields.photo.fields.description\n                    },\n                    bio: entry.fields.bio,\n                    linkedIn: entry.fields.linkedIn\n                }\n\n                this.setState({ author: fetchedAuthor, loading: false });\n            })\n            .catch((error) => {\n                this.setState({\n                    loading: false,\n                });\n                console.log(\"Something wrong happened\", error);\n            });\n    }\n\n    render() {\n\n        let content = <p>Loading...</p>;\n\n        if (!this.state.loading) {\n            if (this.state.author) {\n                content =\n                    <div>\n                        <h1 style={{ textAlign: \"center\", textDecoration: \"underline\" }}>{this.state.author.name}</h1>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <img src={this.state.author.image.url} alt={this.state.author.image.description} style={{ width: \"40%\" }} />\n                            <div style={{ width: \"55%\" }}>{this.formatAuthorBio(this.state.author.bio)}</div>\n                        </div>\n                    </div>\n\n            } else {\n                content = <p>Error...</p>\n            }\n        }\n\n        return (<Card>{content}</Card>);\n    }\n}\n\nexport default Profile;","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Header from \"../Layout/Header/Header\";\nimport Posts from \"../../containers/Posts/Posts\";\nimport FullPost from \"../../containers/Posts/FullPost/FullPost\";\nimport About from \"../About/About\";\nimport Container from \"../Aux/Container/Container\";\nimport Profile from \"../../containers/Profile/Profile\"\n\nconst blog = () => {\n  return (\n    <Fragment>\n      <Header />\n      <Container>\n        <Route path=\"/\" exact component={Posts} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/posts/:id\" component={FullPost} />\n        <Route path=\"/author/:id\" component={Profile} />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default blog;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport Blog from \"../Blog/Blog\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Blog />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3w3i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__UhVmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__24ERy\",\"load8\":\"Spinner_load8__1FLaS\"};"],"sourceRoot":""}