{"version":3,"sources":["components/Layout/Nav/Nav.js","components/Layout/Header/Header.js","components/Card/Card.js","components/Post/Post.js","components/Spinner/Spinner.js","containers/Posts/Posts.js","containers/Posts/FullPost/FullPost.js","components/About/About.js","components/Blog/Blog.js","components/App/App.js","serviceWorker.js","index.js","components/Blog/Blog.module.css","components/Layout/Header/Header.module.css","components/Card/Card.module.css","components/Spinner/Spinner.module.css","containers/Posts/Posts.module.css"],"names":["nav","props","className","to","exact","header","styles","Header","card","Card","children","post","title","createdAt","author","content","spinner","Spinner","contentful","require","Posts","state","posts","loading","client","createClient","space","accessToken","this","getEntries","content_type","then","res","console","log","fetchedPosts","items","map","id","sys","fields","body","value","name","setState","catch","error","length","index","key","CardLink","Post","Component","FullPost","postId","match","params","getEntry","entry","fetchedPost","Date","toDateString","slides","slide","url","file","description","fileName","style","textAlign","color","wordWrap","maxWidth","margin","image","src","alt","about","blog","Row","Column","path","component","About","App","basename","Blog","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.43650e0f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Nav.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact>\n            HOME\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">ABOUT THIS</NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default nav;\n","import React from \"react\";\n\nimport Nav from \"../Nav/Nav\";\nimport styles from \"./Header.module.css\";\n\nconst header = (props) => {\n  return (\n    <header>\n      <div className={styles.Header}>\n        <h1>Agileup Blog</h1>\n        <p>\n          Here you can find some really cool articles about Agile Metodology.\n        </p>\n      </div>\n      <Nav />\n    </header>\n  );\n};\n\nexport default header;\n","import React from \"react\";\n\nimport styles from \"./Card.module.css\";\n\nconst card = (props) => {\n  return <div className={styles.Card}>{props.children}</div>;\n};\n\nexport default card;\n","import React from \"react\";\n\nimport Card from \"../Card/Card\";\n\nconst post = (props) => {\n  return (\n    <Card>\n      <h2>{props.title}</h2>\n      <h5>\n        Created: {props.createdAt} by {props.author}\n      </h5>\n      <p>{props.content}</p>\n    </Card>\n  );\n};\n\nexport default post;\n","import React from \"react\";\n\nimport styles from \"./Spinner.module.css\";\n\nconst spinner = (props) => {\n  return <div className={styles.Spinner}>Loading...</div>;\n};\n\nexport default spinner;\n","import React, { Component, Fragment } from \"react\";\n\nimport Post from \"../../components/Post/Post\";\nimport Card from \"../../components/Card/Card\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nimport styles from \"./Posts.module.css\";\nconst contentful = require(\"contentful\");\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      loading: true,\n    };\n\n    this.client = contentful.createClient({\n      space: \"5ewpe53pwxis\",\n      accessToken: \"Xerq7AgfY3obWybUXHTuhYnXSNUa5aHgd3l5SQnY-jk\",\n    });\n  }\n\n  componentDidMount() {\n    this.client\n      .getEntries({\n        content_type: \"blogPost\",\n      })\n      .then((res) => {\n        console.log(\"posts\", res);\n        const fetchedPosts = res.items.map((post) => {\n          return {\n            id: post.sys.id,\n            title: post.fields.title,\n            body: post.fields.body.content[0].content[0].value,\n            author: post.fields.author.fields.name,\n          };\n        });\n        console.log(fetchedPosts);\n\n        this.setState({ posts: fetchedPosts, loading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(\"Something wrong happened\", error);\n      });\n  }\n\n  render() {\n    let posts = (\n      <Card>\n        <Spinner />\n      </Card>\n    );\n\n    if (!this.state.loading) {\n      if (this.state.posts.length) {\n        posts = this.state.posts.map((post, index) => (\n          <Link\n            key={index}\n            to={\"/posts/\" + post.id}\n            className={styles.CardLink}\n          >\n            <Post\n              title={post.title}\n              content={post.body}\n              author={post.author}\n              createdAt=\"12/05/2020\"\n            />\n          </Link>\n        ));\n      } else {\n        posts = (\n          <Card>\n            <p>No posts available</p>\n          </Card>\n        );\n      }\n    }\n\n    return <Fragment>{posts}</Fragment>;\n  }\n}\n\nexport default Posts;\n","import React, { Component } from \"react\";\n\nimport Card from \"../../../components/Card/Card\";\nimport Spinner from \"../../../components/Spinner/Spinner\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nvar contentful = require(\"contentful\");\n\nclass FullPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      loading: true,\n    };\n\n    this.client = contentful.createClient({\n      space: \"5ewpe53pwxis\",\n      accessToken: \"Xerq7AgfY3obWybUXHTuhYnXSNUa5aHgd3l5SQnY-jk\",\n    });\n  }\n\n  componentDidMount() {\n    const postId = this.props.match.params.id;\n\n    this.client\n      .getEntry(postId)\n      .then((entry) => {\n        const fetchedPost = {\n          title: entry.fields.title,\n          body: entry.fields.body.content[0].content[0].value,\n          author: entry.fields.author.fields.name,\n          createdAt: new Date(entry.sys.createdAt).toDateString(),\n          slides: entry.fields.slides.map((slide) => {\n            return {\n              url: slide.fields.file.url,\n              description: slide.fields.file.fileName,\n            };\n          }),\n        };\n\n        this.setState({ post: fetchedPost, loading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(\"Something wrong happened\", error);\n      });\n  }\n\n  render() {\n    let content = <Spinner />;\n\n    if (!this.state.loading) {\n      if (this.state.post) {\n        content = (\n          <div>\n            <h1>{this.state.post.title}</h1>\n            <h3 style={{ textAlign: \"left\", color: \"grey\" }}>\n              Created: {this.state.post.createdAt} | Author:{\" \"}\n              {this.state.post.author}\n            </h3>\n            <p style={{ textAlign: \"left\", wordWrap: \"break-word\" }}>\n              {this.state.post.body}\n            </p>\n            <div style={{ maxWidth: \"600px\", margin: \"0 auto\" }}>\n              <Carousel>\n                {this.state.post.slides.map((image) => (\n                  <div>\n                    <img src={image.url} alt={image.description} />\n                  </div>\n                ))}\n              </Carousel>\n            </div>\n          </div>\n        );\n      } else {\n        content = <p style={{ color: \"red\" }}>Something went wrong</p>;\n      }\n    }\n\n    return <Card>{content}</Card>;\n  }\n}\n\nexport default FullPost;\n","import React from \"react\";\n\nimport Card from \"../Card/Card\";\n\nconst about = (props) => {\n  return (\n    <Card>\n      <h1>About Agile Up</h1>\n\n      <div style={{ textAlign: \"left\" }}>\n        <p>Maybe here we can put some information about Agile UP.</p>\n\n        <p>If you think this section is not necessary we can just delete it.</p>\n      </div>\n    </Card>\n  );\n};\n\nexport default about;\n","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Header from \"../Layout/Header/Header\";\nimport Posts from \"../../containers/Posts/Posts\";\nimport FullPost from \"../../containers/Posts/FullPost/FullPost\";\nimport About from \"../About/About\";\n\nimport styles from \"./Blog.module.css\";\n\nconst blog = () => {\n  return (\n    <Fragment>\n      <Header />\n      <div className={styles.Row}>\n        <div className={styles.Column}>\n          <Route path=\"/\" exact component={Posts} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/posts/:id\" component={FullPost} />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default blog;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport Blog from \"../Blog/Blog\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <Blog />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Blog_Row__2uXom\",\"Column\":\"Blog_Column__3W-eZ\",\"Leftcolumn\":\"Blog_Leftcolumn__2pjB_\",\"Rightcolumn\":\"Blog_Rightcolumn__2JsJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3w3i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2v91Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__24ERy\",\"load8\":\"Spinner_load8__1FLaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardLink\":\"Posts_CardLink__11PGE\"};"],"sourceRoot":""}