{"version":3,"sources":["components/Layout/Nav/Nav.js","components/Layout/Header/Header.js","components/Aux/Card/Card.js","components/PostItem/PostItem.js","components/Spinner/Spinner.js","containers/Posts/Posts.js","contentfulClient.js","containers/Posts/FullPost/FullPost.js","components/About/About.js","components/Aux/Container/Container.js","containers/Profile/Profile.js","components/Blog/Blog.js","components/App/App.js","serviceWorker.js","index.js","components/Layout/Header/Header.module.css","components/Aux/Card/Card.module.css","components/Spinner/Spinner.module.css"],"names":["nav","props","className","to","exact","header","styles","Header","style","color","card","Card","children","postItem","post","title","id","spinner","Spinner","contentful","require","Posts","state","posts","loading","client","createClient","space","accessToken","this","getEntries","content_type","then","res","fetchedPosts","items","map","sys","fields","body","content","substring","concat","author","name","createdAt","setState","catch","error","console","log","length","key","Component","contentfulClient","FullPost","formatPostBody","postContent","Text","options","renderNode","BLOCKS","PARAGRAPH","node","renderText","text","split","flatMap","i","documentToReactComponents","postId","match","params","getEntry","entry","fetchedPost","imageUrl","photo","file","url","imageDescription","description","linkedIn","Date","toDateString","slides","slide","fileName","maxWidth","margin","image","index","src","alt","about","textAlign","container","Profile","formatAuthorBio","authorBio","authorId","fetchedAuthor","bio","textDecoration","display","justifyContent","width","blog","path","component","About","App","basename","Blog","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5fe0bb47.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Nav.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst nav = (props) => {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <NavLink to=\"/\" exact>\n            POSTS\n          </NavLink>\n        </li>\n        {/* <li>\n          <NavLink to=\"/about\">ABOUT</NavLink>\n        </li> */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default nav;\n","import React from \"react\";\n\nimport Nav from \"../Nav/Nav\";\nimport styles from \"./Header.module.css\";\n\nconst header = (props) => {\n  return (\n    <header>\n      <div className={styles.Header}>\n        <h1>\n          AGILE<span style={{ color: \"#43963f\" }}>UP</span> Blog\n        </h1>\n        <p>\n          Here you can find some really cool articles about Agile Metodology.\n        </p>\n      </div>\n      <Nav />\n    </header>\n  );\n};\n\nexport default header;\n","import React from \"react\";\n\nimport styles from \"./Card.module.css\";\n\nconst card = (props) => {\n  return <div className={styles.Card}>{props.children}</div>;\n};\n\nexport default card;\n","import React from \"react\";\n\nimport Card from \"../Aux/Card/Card\";\nimport { Link } from \"react-router-dom\";\n\n// import { FaAt, FaCalendarAlt } from \"react-icons/fa\";\n\nimport \"./PostItem.css\";\n\nconst postItem = (props) => {\n  return (\n    <Card>\n      <h2 className=\"post__title\">{props.post.title}</h2>\n      {/* <div className=\"post__metadata\">\n        <span className=\"icon\">\n          <FaAt />\n        </span>\n        {props.post.author}\n      </div>\n      <div className=\"post__metadata\">\n        <span className=\"icon\">\n          <FaCalendarAlt />\n        </span>\n        {new Date(props.post.createdAt).toDateString()}\n      </div>\n      <p className=\"post__intro\">{props.post.body}</p> */}\n      <Link className=\"btn btn--right\" to={\"/posts/\" + props.post.id}>\n        Read More\n      </Link>\n    </Card>\n  );\n};\n\nexport default postItem;\n","import React from \"react\";\n\nimport styles from \"./Spinner.module.css\";\n\nconst spinner = (props) => {\n  return <div className={styles.Spinner}>Loading...</div>;\n};\n\nexport default spinner;\n","import React, { Component, Fragment } from \"react\";\n\nimport PostItem from \"../../components/PostItem/PostItem\";\nimport Card from \"../../components/Aux/Card/Card\";\n\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nconst contentful = require(\"contentful\");\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      loading: true,\n    };\n\n    this.client = contentful.createClient({\n      space: \"5ewpe53pwxis\",\n      accessToken: \"Xerq7AgfY3obWybUXHTuhYnXSNUa5aHgd3l5SQnY-jk\",\n    });\n  }\n\n  componentDidMount() {\n    this.client\n      .getEntries({\n        content_type: \"blogPost\",\n      })\n      .then((res) => {\n        const fetchedPosts = res.items.map((post) => {\n          return {\n            id: post.sys.id,\n            title: post.fields.title,\n            body: post.fields.content.substring(0, 250).concat(\" ...\"),\n            author: post.fields.author.fields.name,\n            createdAt: post.sys.createdAt,\n          };\n        });\n        this.setState({ posts: fetchedPosts, loading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(\"Something wrong happened\", error);\n      });\n  }\n\n  render() {\n    let posts = (\n      <Card>\n        <Spinner />\n      </Card>\n    );\n\n    if (!this.state.loading) {\n      if (this.state.posts.length) {\n        posts = this.state.posts.map((post) => (\n          <PostItem post={post} key={post.id} />\n        ));\n      } else {\n        posts = (\n          <Card>\n            <p>No posts available</p>\n          </Card>\n        );\n      }\n    }\n\n    return <Fragment>{posts}</Fragment>;\n  }\n}\n\nexport default Posts;\n","import * as contentful from \"contentful\";\n\nconst contentfulClient =  contentful.createClient({\n    space: \"5ewpe53pwxis\",\n    accessToken: \"Xerq7AgfY3obWybUXHTuhYnXSNUa5aHgd3l5SQnY-jk\",\n});\n\nexport default contentfulClient;","import React, { Component, Fragment } from \"react\";\n// import { NavLink } from \"react-router-dom\";\n\nimport Card from \"../../../components/Aux/Card/Card\";\nimport Spinner from \"../../../components/Spinner/Spinner\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n// import { FaCalendar, FaLinkedinIn } from \"react-icons/fa\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { BLOCKS } from \"@contentful/rich-text-types\";\n\nimport contentfulClient from \"../../../contentfulClient\";\n\nimport \"./FullPost.css\";\n\nclass FullPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: null,\n      loading: true,\n    };\n\n  }\n\n  componentDidMount() {\n    const postId = this.props.match.params.id;\n\n    contentfulClient\n      .getEntry(postId)\n      .then((entry) => {\n        console.log(entry)\n        const fetchedPost = {\n          title: entry.fields.title,\n          content: entry.fields.content,\n          body: entry.fields.body,\n          author: {\n            id: entry.fields.author.sys.id,\n            name: entry.fields.author.fields.name,\n            imageUrl: entry.fields.author.fields.photo.fields.file.url,\n            imageDescription:\n              entry.fields.author.fields.photo.fields.description,\n            linkedIn: entry.fields.author.fields.linkedIn,\n          },\n          createdAt: new Date(entry.sys.createdAt).toDateString(),\n          slides: entry.fields.slides.map((slide) => {\n            return {\n              url: slide.fields.file.url,\n              description: slide.fields.file.fileName,\n            };\n          }),\n        };\n\n        this.setState({ post: fetchedPost, loading: false });\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(\"Something wrong happened\", error);\n      });\n  }\n\n  formatPostBody = (postContent) => {\n    const Text = ({ children }) => <p>{children}</p>;\n\n    const options = {\n      renderNode: {\n        [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n      },\n      renderText: (text) =>\n        text.split(\"\\n\").flatMap((text, i) => [i > 0 && <br />, text]),\n    };\n\n    return documentToReactComponents(postContent, options);\n  };\n\n  render() {\n    let content = <Spinner />;\n\n    if (!this.state.loading) {\n      if (this.state.post) {\n        content = (\n          <Fragment>\n            {/* <div className=\"post__metadata\">\n              <span className=\"icon\">\n                <FaCalendar /> {this.state.post.createdAt}\n              </span>\n            </div> */}\n            <h1 className=\"post__title\">{this.state.post.title}</h1>\n            {/* <div className=\"post__author\">\n              <img\n                className=\"author__photo\"\n                src={this.state.post.author.imageUrl}\n                alt={this.state.post.author.imageDescription}\n              />\n              <div className=\"author__metadata\">\n                <p>{this.state.post.author.name}</p>\n                <div className=\"author__icons\">\n                  <a\n                    href={this.state.post.author.linkedIn}\n                    className=\"icon__link\"\n                  >\n                    <FaLinkedinIn size=\"1.7em\" title=\"LinkedIn Profile\" />\n                  </a>\n                </div>\n              </div>\n            </div> */}\n\n            <div style={{ maxWidth: \"600px\", margin: \"0 auto\" }}>\n              <Carousel>\n                {this.state.post.slides.map((image, index) => (\n                  <div key={index}>\n                    <img src={image.url} alt={image.description} />\n                  </div>\n                ))}\n              </Carousel>\n            </div>\n\n            <p className=\"post__body\">\n              {this.formatPostBody(this.state.post.body)}\n            </p>\n\n          </Fragment>\n        );\n      } else {\n        content = <p style={{ color: \"red\" }}>Something went wrong</p>;\n      }\n    }\n\n    return <Card>{content}</Card>;\n  }\n}\n\nexport default FullPost;\n","import React from \"react\";\n\nimport Card from \"../../components/Aux/Card/Card\";\n\nconst about = (props) => {\n  return (\n    <Card>\n      <h1>About Agile Up</h1>\n\n      <div style={{ textAlign: \"left\" }}>\n        <p>Maybe here we can put some information about Agile UP.</p>\n\n        <p>If you think this section is not necessary we can just delete it.</p>\n      </div>\n    </Card>\n  );\n};\n\nexport default about;\n","import React from \"react\";\n\nimport \"./Container.css\";\n\nconst container = (props) => {\n  return <div className=\"container\">{props.children}</div>;\n};\n\nexport default container;\n","import React, { Component } from 'react';\n\nimport Card from \"../../components/Aux/Card/Card\";\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { BLOCKS } from \"@contentful/rich-text-types\";\n\nimport contentfulClient from \"../../contentfulClient\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { author: null }\n    }\n\n    formatAuthorBio = (authorBio) => {\n        const Text = ({ children }) => <p>{children}</p>;\n\n        const options = {\n            renderNode: {\n                [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n            },\n            renderText: (text) =>\n                text.split(\"\\n\").flatMap((text, i) => [i > 0 && <br />, text]),\n        };\n\n        return documentToReactComponents(authorBio, options);\n    };\n\n    componentDidMount() {\n        const authorId = this.props.match.params.id;\n        contentfulClient\n            .getEntry(authorId)\n            .then((entry) => {\n                const fetchedAuthor = {\n                    id: entry.sys.id,\n                    name: entry.fields.name,\n                    image: {\n                        url: entry.fields.photo.fields.file.url,\n                        description: entry.fields.photo.fields.description\n                    },\n                    bio: entry.fields.bio,\n                    linkedIn: entry.fields.linkedIn\n                }\n\n                this.setState({ author: fetchedAuthor, loading: false });\n            })\n            .catch((error) => {\n                this.setState({\n                    loading: false,\n                });\n                console.log(\"Something wrong happened\", error);\n            });\n    }\n\n    render() {\n\n        let content = <p>Loading...</p>;\n\n        if (!this.state.loading) {\n            if (this.state.author) {\n                content =\n                    <div>\n                        <h1 style={{ textAlign: \"center\", textDecoration: \"underline\" }}>{this.state.author.name}</h1>\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                            <img src={this.state.author.image.url} alt={this.state.author.image.description} style={{ width: \"40%\" }} />\n                            <div style={{ width: \"55%\" }}>{this.formatAuthorBio(this.state.author.bio)}</div>\n                        </div>\n                    </div>\n\n            } else {\n                content = <p>Error...</p>\n            }\n        }\n\n        return (<Card>{content}</Card>);\n    }\n}\n\nexport default Profile;","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Header from \"../Layout/Header/Header\";\nimport Posts from \"../../containers/Posts/Posts\";\nimport FullPost from \"../../containers/Posts/FullPost/FullPost\";\nimport About from \"../About/About\";\nimport Container from \"../Aux/Container/Container\";\nimport Profile from \"../../containers/Profile/Profile\"\n\nconst blog = () => {\n  return (\n    <Fragment>\n      <Header />\n      <Container>\n        <Route path=\"/\" exact component={Posts} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/posts/:id\" component={FullPost} />\n        <Route path=\"/author/:id\" component={Profile} />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default blog;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport Blog from \"../Blog/Blog\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Blog />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3w3i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__UhVmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__24ERy\",\"load8\":\"Spinner_load8__1FLaS\"};"],"sourceRoot":""}